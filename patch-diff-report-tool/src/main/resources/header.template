<html>
	<head>
		<title>checkstyle xml difference report</title>
		<style type="text/css" media="all">@import url("./css/maven-base.css");@import url("./css/maven-theme.css"); );</style>
		<http-equiv http-equiv="Content-Language" content="en"></http-equiv>
	</head>
	<body class="composite">
		<div id="contentBox">
			<div class="section">
				<h2 a="Checkstyle XML difference report">Checkstyle XML difference report</h2>
				This is symmetric difference generated from two checkstyle-result.xml reports. <br/>
				All matching records from each XML file are deleted, then remaining records are merged into single report. <br>
		        <a href="https://github.com/checkstyle/contribution/tree/master/patch-diff-report-tool">Utility that generated this report.</a>
			</div>

			<th:block th:if="${config} != null">
				<h2 a="Checkstyle configuration report">Checkstyle configuration report</h2>
				<div class="section">
					<table border="0" class="bodyTable">
							<tr class="a">
								<th>Module Name</th>
								<th>Base properties</th>
								<th>Patch properties</th>
							</tr>
							<th:block th:each="child : ${config.children}">
								<th:block th:fragment="module" class="a">
									<tr>
										<td th:text=${child.simpleModuleName} class="c"> moduleName </td>
										<td th:if="${child.hasBaseModule() and not child.hasIdenticalProperties}" class="b">
											<th:block th:each="property : ${child.baseModuleProperties}">
												<th:block th:text=${property.key}> propertyName </th:block>
												<th:block th:each="token : ${property.value}">
													<li th:text=${token}> tokenValue </li>
												</th:block>
												<br/>
											</th:block>
										</td>
										<td th:if="${child.hasBaseModule() and child.hasIdenticalProperties}" class="c">
											<th:block th:each="property : ${child.baseModuleProperties}">
												<th:block th:text=${property.key}> propertyName </th:block>
												<th:block th:each="token : ${property.value}">
													<li th:text=${token}> tokenValue </li>
												</th:block>
												<br/>
											</th:block>
										</td>
										<td th:unless="${child.hasBaseModule()}"> </td>
										<td th:if="${child.hasPatchModule() and not child.hasIdenticalProperties}" class="a">
											<th:block th:each="property : ${child.patchModuleProperties}">
												<th:block th:text=${property.key}> propertyName </th:block>
												<th:block th:each="token : ${property.value}">
													<li th:text=${token}> tokenValue </li>
												</th:block>
												<br/>
											</th:block>
										</td>
										<td th:if="${child.hasPatchModule() and child.hasIdenticalProperties}" class="c">
											<th:block th:each="property : ${child.patchModuleProperties}">
												<th:block th:text=${property.key}> propertyName </th:block>
												<th:block th:each="token : ${property.value}">
													<li th:text=${token}> tokenValue </li>
												</th:block>
												<br/>
											</th:block>
										</td>
										<td th:unless="${child.hasPatchModule()}"> </td>
									</tr>
									<th:block th:each="grandchild : ${child.children}">
										<th:block th:include="::module" th:with="child = ${grandchild}"/>
									</th:block>
								</th:block>
							</th:block>	
					</table>	
				</div>
			</th:block>

			<div class="section">
				<h2 a="Summary:">Summary:</h2>
				<div class="section">
					<table border="0" class="bodyTable">
						<tr class="a">
							<th>Report id</th>
							<th>Files</th>
							<th>Violations</th>
							<th:block th:each="name : ${statistics.severityNames}">
								<th th:text="Severity- + ${name}"> infoNumBase </th>
							</th:block>
						</tr>
						<tr class="b">
							<td>base</td>
							<td id="filesBase" th:text=${statistics.fileNumBase}> fileNumBase </td>
							<td id="totalBase" th:text=${statistics.totalNumBase}> totalNumBase </td>
							<th:block th:each="name : ${statistics.severityNames}">
								<td th:id="${name} + @{SeverityNumBase}" th:text="${statistics.severityNumBase.get(name) != null} ? ${statistics.severityNumBase.get(name)} : '0'"> infoNumBase </td>
							</th:block>
						</tr>
						<tr class="a">
							<td>patch</td>
							<td id="filesPatch" th:text=${statistics.fileNumPatch}> fileNumPatch </td>
							<td id="totalPatch" th:text=${statistics.totalNumPatch}> totalNumPatch </td>
							<th:block th:each="name : ${statistics.severityNames}">
								<td th:id="${name} + @{SeverityNumPatch}" th:text="${statistics.severityNumPatch.get(name) != null} ? ${statistics.severityNumPatch.get(name)} : '0'"> infoNumBase </td>
							</th:block>
						</tr>
						<tr class="d">
							<td>difference</td>
							<td id="filesDiff" th:text=${statistics.fileNumDiff}> fileNumDiff </td>
							<td id="totalDiff" th:text=${statistics.totalNumDiff}> totalNumDiff </td>
							<th:block th:each="name : ${statistics.severityNames}">
								<td th:id="${name} + @{SeverityNumDiff}" th:text="${statistics.severityNumDiff.get(name) != null} ? ${statistics.severityNumDiff.get(name)} : '0'"> infoNumBase </td>
							</th:block>
						<tr>
					</table>

					<br />
					Number of unique base messages reported below: <span id="uniqueMessagesBase" th:text=${statistics.uniqueMessagesBase}>uniqueMessagesBase</span><br />
					Number of unique patch messages reported below: <span id="uniqueMessagesPatch" th:text=${statistics.uniqueMessagesPatch}>uniqueMessagesPatch</span><br />
				</div>
			</div>

			<div class="section">
				<h2 a="Violations:">Violations:</h2>
